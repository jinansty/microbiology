
#Read the metadata
metadata <- read.xlsx("metadata.xlsx")
rownames(metadata) <- metadata[,1]
metadata <- metadata[,-1]
metadata$samples <- rownames(metadata)

#Read the matrix files caculated by the USEARCH11
#bray_curtis.sorted.txt
#jaccard.sorted.txt
#manhatten.sorted.txt
#unifrac.sorted.txt
#unifrac_binary.sorted.txt

dist_matrix <- read.delim("unifrac.sorted.txt", header = T, sep = "\t", check.names = F, stringsAsFactors = F, row.names = 1)
#----------------------------------------------------------------------------------
library(vegan)
library(parallel)

tmp <- matrix(nrow = 81, ncol = 3)

for (i in 1:81) {
  metadata_sel <- metadata[,c(i,82)]
  metadata_sel <- metadata_sel[!metadata_sel[,1] %in% "Other",]
  
  dist_matrix_sel <- dist_matrix[rownames(dist_matrix) %in% rownames(metadata_sel),
                                 colnames(dist_matrix) %in% rownames(metadata_sel)]
  
  metadata_sel <- metadata_sel[rownames(metadata_sel) %in% colnames(dist_matrix_sel),]
  
  print(paste(i, colnames(metadata_sel)[1]))
  metadata_sel[,1] <- as.factor(metadata_sel[,1])
  metadata_sel <- metadata_sel[colnames(dist_matrix_sel),]
  
  dist_matrix_sel <- as.dist(dist_matrix_sel)
  
  if(all(rownames(dist_matrix_sel)==rownames(metadata_sel))){
  
    #caculated by 4 methods
    adonis_result <- adonis2(dist_matrix_sel ~ metadata_sel[,1], data = metadata_sel, permutations = 1000, parallel = 8)
    #anosim_result <- anosim(dist_matrix_sel, metadata_sel[,1], permutations = 1000, parallel = 8)
    #dbRDA_result <- dbrda(dist_matrix_sel ~ metadata_sel[,1], data = metadata_sel, add = TRUE, parallel = 8)
    #mrpp_result <- mrpp(dist_matrix_sel, metadata_sel[,1], permutations = 1000, parallel = 8)
    
    print(adonis_result)
    tmp[i,1] <- colnames(metadata_sel)[1]
    tmp[i,2] <- adonis_result$R2[1]
    tmp[i,3] <- adonis_result$`Pr(>F)`[1]
  }
}

write.table(tmp, file = "adonis2_weighted_result.txt", quote = F, sep = "\t", row.names = F)
#--------------------------------------------------------------------------------------
#Plot the significent results
library(ggplot2)
library(dplyr)
library(ggsci)
library(openxlsx)

adonis_result <- read.xlsx("distances_result.xlsx", sheet = 1)

adonis_result <- adonis_result[,1:5]
adonis_result <- adonis_result[!is.na(adonis_result$Sig),]
adonis_result <- adonis_result[!adonis_result$Sig %in% "ns",]

adonis_result <- adonis_result[order(adonis_result$R2),]
p <- ggplot(adonis_result, aes(x = R2, y = factor(X1, levels = X1)))
p <- p+ geom_bar(stat="identity", width = 0.6)
p <- p+ theme_bw()
p <- p+ geom_text(aes(label = ifelse(BH < 0.01, "**", "*")), vjust = 0.6, colour = "black", position = position_dodge(1), size = 4)
p <- p+ scale_x_continuous(expand = c(0,0))
p <- p+ scale_fill_manual(values = pal_lancet("lanonc", alpha = 1)(6))
p
ggsave(filename = "chao_metadata.pdf", plot = p, device = "pdf", width = 14, height = 8, dpi = 300)

