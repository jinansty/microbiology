
library(openxlsx)
library(ComplexHeatmap)
library(vcd)

#read the metadata
metadata <- read.xlsx("metadata.xlsx", sheet = 1)
rownames(metadata) <- metadata$Vid
metadata <- metadata[,-1]
#------------------------------------------------------------------
tmp <- data.frame()

for (i in 1:(ncol(metadata)-1)) {
  for (j in (i+1):ncol(metadata)) {
    try({
    res <- matrix(ncol = 4)
    
    metadata_sel <- data.frame(metadata[,i], metadata[,j])
    metadata_sel <- metadata_sel[!((metadata_sel[,1] %in% "Other") | (metadata_sel[,2] %in% "Other")),]
    
    for (k in 1:ncol(metadata_sel)) {
      metadata_sel[,k] <- as.factor(metadata_sel[,k])
    }
    
    tab <- xtabs(~ metadata_sel[,1] + metadata_sel[,2], data = metadata_sel)
    q <- assocstats(tab)
    
    res[1,1] <- colnames(metadata)[i]
    res[1,2] <- colnames(metadata)[j]
    res[1,3] <- q$cramer
    res[1,4] <- q$chisq_tests[2,3]
          
    tmp <- rbind(tmp, res)
})}}

tmp <- tmp[-1,]
colnames(tmp) <- c("env1", "env2", "Cramer's V", "chisq-test p.value")
tmp <- as.data.frame(tmp)
tmp$BH <- p.adjust(tmp[,4], method = "BH")
write.xlsx(tmp, "env_asso.xlsx")
#--------------------------------------------------------------------------
plot <- data.feame()
rownames(plot) <- colnames(metadata)
colnames(plot) <- colnames(metadata)
plot <- as.data.frame(plot)

env.asso.sig <- tmp

for (i in 1:27) {
  for (j in 1:27) {
    try(
    if(colnames(metadata)[i] %in% colnames(metadata)[j]){
      plot[colnames(metadata)[i], colnames(metadata)[j]] <- 1
    }else{
      tmp2 <- env.asso.sig[((env.asso.sig$env1 %in% colnames(metadata)[i]) & (env.asso.sig$env2 %in% colnames(metadata)[j]))|((env.asso.sig$env2 %in% colnames(metadata)[i]) & (env.asso.sig$env1 %in% colnames(metadata)[j])),]
      plot[colnames(metadata)[i], colnames(metadata)[j]] <- as.numeric(tmp2$`Cramer's V`)
    })
  }
}
#--------------------------------------------------------------------------
pdf(file = "factor_asso.pdf", width = 8, height = 8)
pheatmap(as.matrix(plot), display_numbers = ifelse(plot > 0.3, "*", ""), border_color = c("lightgrey"),
         color = colorRampPalette(c("white", "#0099B499", "#0099B4FF", "#00468B99"))(50))
dev.off()

